---
- name: 1.replace_keys
  block:
    - name: 1.replace_keys debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 1.replace_keys assert
      assert:
        that: result == target
  vars:
    result: "{{ l1|ansible.utils.replace_keys(target=_target) }}"
    _target:
      - {before: p1, after: x1}
      - {before: p2, after: x2}
    target:
      - {p3: a, x1: a, x2: a}
      - {p3: b, x1: b, x2: b}
      - {p3: c, x1: c, x2: c}
  tags: replace_keys

- name: 2.map replace_keys
  block:
    - name: 2.map replace_keys debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 2.map replace_keys assert
      assert:
        that: result == target
  vars:
    result: "{{ l2|map('ansible.utils.replace_keys', target=_target)|
                   list }}"
    _target:
      - {before: p1, after: x1}
      - {before: p2, after: x2}
    target:
      - - {p3: a, x1: a, x2: a}
        - {p3: b, x1: b, x2: b}
        - {p3: c, x1: c, x2: c}
      - - {p3: a, x1: a, x2: a}
        - {p3: b, x1: b, x2: b}
        - {p3: c, x1: c, x2: c}
      - - {p3: a, x1: a, x2: a}
        - {p3: b, x1: b, x2: b}
        - {p3: c, x1: c, x2: c}
  tags: map_replace_keys

- name: 3.replace_keys starts_with
  block:
    - name: 3.replace_keys starts_with debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 3.replace_keys starts_with assert
      assert:
        that: result == target
  vars:
    result: "{{ l1|ansible.utils.replace_keys(target=_target,
                                              matching_parameter='starts_with') }}"
    _target:
      - {before: p1, after: x1}
      - {before: p2, after: x2}
    target:
      - {p3: a, x1: a, x2: a}
      - {p3: b, x1: b, x2: b}
      - {p3: c, x1: c, x2: c}
  tags: replace_keys_starts_with_2

- name: 4.replace_keys starts_with
  block:
    - name: 4.replace_keys starts_with debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 4.replace_keys starts_with assert
      assert:
        that: result == target
  vars:
    result: "{{ l3|ansible.utils.replace_keys(target=_target,
                                              matching_parameter='starts_with') }}"
    _target:
      - {before: p1, after: x1}
      - {before: p2, after: x2}
    target:
      - {p3_key_o3: a, x1: a, x2: a}
      - {p3_key_o6: b, x1: b, x2: b}
      - {p3_key_o9: c, x1: c, x2: c}
  tags: replace_keys_starts_with_3

- name: 5.replace_keys starts_with 'p'
  block:
    - name: 5.replace_keys starts_with 'p' debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 5.replace_keys starts_with assert
      assert:
        that: result == target
  vars:
    result: "{{ l1|ansible.utils.replace_keys(target=_target,
                                              matching_parameter='starts_with') }}"
    _target:
      - {before: p, after: x}
    target:
      - {x: a}
      - {x: b}
      - {x: c}
  tags: replace_keys_starts_with_1

- name: 6.replace_keys ends_with
  block:
    - name: 6.replace_keys ends_with debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 6.replace_keys ends_with assert
      assert:
        that: result == target
  vars:
    result: "{{ l1|ansible.utils.replace_keys(target=_target,
                                              matching_parameter='ends_with') }}"
    _target:
      - {before: p1, after: x1}
      - {before: p2, after: x2}
    target:
      - {p3: a, x1: a, x2: a}
      - {p3: b, x1: b, x2: b}
      - {p3: c, x1: c, x2: c}
  tags: replace_keys_ends_with_2

- name: 7.replace_keys ends_with
  block:
    - name: 7.replace_keys ends_with debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 7.replace_keys ends_with assert
      assert:
        that: result == target
  vars:
    result: "{{ l3|ansible.utils.replace_keys(target=_target,
                                              matching_parameter='ends_with') }}"
    _target:
      - {before: o1, after: x1}
      - {before: o2, after: x2}
    target:
      - {p3_key_o3: a, x1: a, x2: a}
      - {p1_key_o4: b, p2_key_o5: b, p3_key_o6: b}
      - {p1_key_o7: c, p2_key_o8: c, p3_key_o9: c}
  tags: replace_keys_ends_with_3

- name: 8.replace_keys ends_with '2'
  block:
    - name: 8.replace_keys ends_with '2' debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 8.replace_keys ends_with '2' assert
      assert:
        that: result == target
  vars:
    result: "{{ l1|ansible.utils.replace_keys(target=_target,
                                              matching_parameter='ends_with') }}"
    _target:
      - {before: 2, after: 9}
    target:
      - {'9': a, p1: a, p3: a}
      - {'9': b, p1: b, p3: b}
      - {'9': c, p1: c, p3: c}
  tags: replace_keys_ends_with_1

- name: 9.replace_keys regex
  block:
    - name: 9.replace_keys regex debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: 9.replace_keys regex assert
      assert:
        that: result == target
  vars:
    result: "{{ l3|ansible.utils.replace_keys(target=_target,
                                              matching_parameter='regex') }}"
    _target:
      - {before: '^(.*)_key_o2$', after: 'XY_key_o2'}
    target:
      - {XY_key_o2: a, p1_key_o1: a, p3_key_o3: a}
      - {p1_key_o4: b, p2_key_o5: b, p3_key_o6: b}
      - {p1_key_o7: c, p2_key_o8: c, p3_key_o9: c}
  tags: replace_keys_regex_1

---
- name: validate data in json format using jsonschema (invalid data)
  ansible.utils.validate:
    data: "{{ show_interfaces }}"
    engine: ansible.utils.jsonschema
    criteria:
      - "{{ oper_status }}"
      - "{{ enable_check }}"
      - "{{ crc_error_check }}"
  register: result
  ignore_errors: true

- ansible.builtin.assert:
    that:
      - "result.failed == true"
      - "'Validation errors were found' in result.msg"
      - "'oper_status' in result.msg"
      - "'enabled' in result.msg"
      - "'in_crc_errors' in result.msg"

- name: validate data in json format using jsonschema (valid data)
  ansible.utils.validate:
    data: "{{ show_interfaces }}"
    engine: ansible.utils.jsonschema
    criteria: "{{ in_rate_check }}"
  register: result

- ansible.builtin.assert:
    that:
      - "result.failed == false"
      - "'All checks passed' in result.msg"

- name: test invalid plugin configuration option
  ansible.utils.validate:
    data: "{{ show_interfaces }}"
    engine: ansible.utils.jsonschema
    criteria: "{{ in_rate_check }}"
    invalid_param: draft0
  register: result
  ignore_errors: true

- ansible.builtin.assert:
    that:
      - "result.failed == true"
      - "'unsupported parameter' in result.msg"

- name: invalid engine value
  ansible.utils.validate:
    data: "{{ show_interfaces }}"
    engine: ansible.utils.sample
    criteria: "{{ in_rate_check }}"
  register: result
  ignore_errors: true

- ansible.builtin.assert:
    that:
      - "result.failed == true"
      - "'For engine \\'ansible.utils.sample\\' error loading the corresponding validate plugin' in result.msg"

- name: invalid data value
  ansible.utils.validate:
    data: invalid data
    engine: ansible.utils.jsonschema
    criteria: "{{ in_rate_check }}"
  register: result
  ignore_errors: true

- ansible.builtin.assert:
    that:
      - "result.failed == true"
      - "'\\'data\\' option value is invalid' in result.msg"

- name: invalid criteria value
  ansible.utils.validate:
    data: "{{ show_interfaces }}"
    engine: ansible.utils.jsonschema
    criteria: invalid data
  register: result
  ignore_errors: true

- ansible.builtin.assert:
    that:
      - "result.failed == true"
      - "'\\'criteria\\' option value is invalid' in result.msg"

- name: read data and criteria from file
  ansible.builtin.set_fact:
    data: "{{ lookup('ansible.builtin.file', '{{ role_path }}/files/data/show_interface.json') | from_json }}"
    oper_status_up_criteria: "{{ lookup('ansible.builtin.file', '{{ role_path }}/files/criteria/oper_status_up.json') | from_json }}"
    enabled_check_criteria: "{{ lookup('ansible.builtin.file', '{{ role_path }}/files/criteria/enabled_check.json') | from_json }}"
    crc_error_check_criteria: "{{ lookup('ansible.builtin.file', '{{ role_path }}/files/criteria/crc_error_check.json') | from_json }}"
    in_rate_check_criteria: "{{ lookup('ansible.builtin.file', '{{ role_path }}/files/criteria/in_rate_check.json') | from_json }}"

- name: validate data using jsonschema engine (invalid data read from file)
  ansible.utils.validate:
    data: "{{ data }}"
    engine: ansible.utils.jsonschema
    criteria:
      - "{{ oper_status_up_criteria }}"
      - "{{ enabled_check_criteria }}"
      - "{{ crc_error_check_criteria }}"
  register: result
  ignore_errors: true

- ansible.builtin.assert:
    that:
      - "result.failed == true"
      - "'Validation errors were found' in result.msg"
      - "'oper_status' in result.msg"
      - "'enabled' in result.msg"
      - "'in_crc_errors' in result.msg"

- name: validate data using jsonschema engine (valid data read from file)
  ansible.utils.validate:
    data: "{{ data }}"
    engine: ansible.utils.jsonschema
    criteria: "{{ in_rate_check_criteria }}"
  register: result

- ansible.builtin.assert:
    that:
      - "result.failed == false"
      - "'All checks passed' in result.msg"

- name: validate list data using jsonschema
  ansible.utils.validate:
    data: "{{ lookup('ansible.builtin.file', '{{ role_path }}/files/data/test_list_data.json') | from_json }}"
    criteria: "{{ lookup('ansible.builtin.file', '{{ role_path }}/files/criteria/check_list_data.json') | from_json }}"
    engine: ansible.utils.jsonschema
  register: result
  ignore_errors: true

- ansible.builtin.assert:
    that:
      - "'errors' not in result"
      - "'All checks passed' in result.msg"

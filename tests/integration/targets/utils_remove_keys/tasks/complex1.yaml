---
- name: Test remove_keys
  vars:
    result: "{{ l1|ansible.utils.remove_keys(target=['p1', 'p2']) }}"
    target:
      - { p3: a }
      - { p3: b }
      - { p3: c }
  tags: remove_keys
  block:
    - name: remove_keys debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: remove_keys assert
      assert:
        that: result == target

- name: Test map remove_keys
  vars:
    result: "{{ l2|map('ansible.utils.remove_keys', target=['p1', 'p2'])|list }}"
    target:
      - - { p3: a }
        - { p3: b }
        - { p3: c }
      - - { p3: a }
        - { p3: b }
        - { p3: c }
      - - { p3: a }
        - { p3: b }
        - { p3: c }
  tags: map_remove_keys
  block:
    - name: map remove_keys debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: map remove_keys assert
      assert:
        that: result == target

- name: Test remove_keys starts_with
  vars:
    result: "{{ l1|ansible.utils.remove_keys(target=['p1', 'p2'], matching_parameter= 'starts_with') }}"
    target:
      - { p3: a }
      - { p3: b }
      - { p3: c }
  tags: remove_keys_starts_with_2
  block:
    - name: remove_keys starts_with debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: remove_keys assert
      assert:
        that: result == target

- name: Test remove_keys starts_with 'p'
  vars:
    result: "{{ l1|ansible.utils.remove_keys(target=['p'], matching_parameter= 'starts_with') }}"
    target: []
  tags: remove_keys_starts_with_1
  block:
    - name: remove_keys starts_with 'p' debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: remove_keys assert
      assert:
        that: result == target

- name: Test remove_keys ends_with
  vars:
    result: "{{ l1|ansible.utils.remove_keys(target=['p1', 'p2'], matching_parameter= 'ends_with') }}"
    target:
      - { p3: a }
      - { p3: b }
      - { p3: c }
  tags: remove_keys_ends_with_2
  block:
    - name: remove_keys ends_with
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: remove_keys ends_with assert
      assert:
        that: result == target

- name: Test remove_keys ends_with '2'
  vars:
    result: "{{ l1|ansible.utils.remove_keys(target=['2'], matching_parameter= 'ends_with') }}"
    target:
      - { p1: a, p3: a }
      - { p1: b, p3: b }
      - { p1: c, p3: c }
  tags: remove_keys_ends_with_1
  block:
    - name: remove_keys ends_with '2' debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: remove_keys ends_with '2' assert
      assert:
        that: result == target

- name: Test remove_keys regex
  vars:
    result: "{{ l1|ansible.utils.remove_keys(target=['p1', 'p2'], matching_parameter= 'regex') }}"
    target:
      - { p3: a }
      - { p3: b }
      - { p3: c }
  tags: remove_keys_regex
  block:
    - name: remove_keys regex debug
      debug:
        var: result|to_yaml
      when: debug_test|d(false)|bool
    - name: remove_keys regex assert
      assert:
        that: result == target
